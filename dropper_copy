else
        {

            if (!Input.IsActionPressed("Mouse_Pressed"))
            {
                can_delete_items = true;
            }

            warning_edit_panel.GetNode<Label>("Item_Name").Text = selected_item["name"];


            var no_item_label = warning_edit_panel.GetNode<Label>("No_Item");
            no_item_label.Visible = (render_warning_item_list.Count <= 0);

            var add_button = warning_edit_panel.GetNode<Button>("Add_Button");

            if (add_button.Pressed && !item_Searcher.Visible)
            {
                item_Searcher.load_data(new_item_warning_adding_list);
                item_Searcher.pop();
            }
            else if (item_Searcher.is_item_selected)
            {
                render_warning_item_list.Add(new Dictionary<string, string>() { { "name", item_Searcher.selected_item }, { "message", "Don't use it" }, { "is_completely_restricted", "false" } });
                item_Searcher.reset();
                is_item_warning_data_loaded = false;
            }



            Button save_data_button = warning_edit_panel.GetNode<Button>("Save_Data");

            Button back_button = warning_edit_panel.GetNode<Button>("Back_Button");

            var warning_item_boxes = warning_edit_panel.GetNode<VBoxContainer>("VBoxContainer").GetChildren();


            scroller_effect(warning_item_boxes.Count, render_warning_item_list);



            if (save_data_button.Pressed)
            {
                string message = "";
                foreach (Dictionary<string, string> item in render_warning_item_list)
                {
                    var name = item["name"];
                    var specific_message = item["message"];
                    var is_completely_restricted = item["is_completely_restricted"];
                    message += $"|{name}:{specific_message}:{is_completely_restricted}|";
                }
                // setting the message to hyphen(-) which means null when the render_warning_item_list length is less than zero
                message = (render_warning_item_list.Count > 0) ? message : "-";
                GD.Print(message, " from the weiditor");

                selected_item_dm.set_value("Warning_List", message);
                selected_item_dm.save_data();
                selected_item_dm.load_previous_data_again();
            }
            if (back_button.Pressed)
            {
                selected_item = null;
                item_start_index = 0;
            }

            if (!is_item_warning_data_loaded)
            {
                reset_new_item_w_add_list();


                foreach (MarginContainer item in warning_item_boxes)
                {
                    var index = warning_item_boxes.IndexOf(item);
                    var name = item.GetNode<Label>("Name");
                    var text_holder = inputs.GetChildren()[index] as TextEdit;

                    var is_res_toggle_button = item.GetNode("HBoxContainer/VBoxContainer2/MarginContainer/Toggle_Is_Restricted") as CheckButton;

                    if (item_start_index + index < render_warning_item_list.Count)
                    {
                        item.Visible = true;
                        text_holder.Visible = true;
                        Godot.Collections.Dictionary<string, string> item_warning_data = render_warning_item_list[item_start_index + index] as Godot.Collections.Dictionary<string, string>;
                        name.Text = item_warning_data["name"];
                        text_holder.Text = item_warning_data["message"];
                        is_res_toggle_button.Pressed = Convert.ToBoolean(item_warning_data["is_completely_restricted"]);

                    }
                    else
                    {
                        item.Visible = false;
                        text_holder.Visible = false;
                    }
                }

                is_item_warning_data_loaded = true;
            }
            else
            {
                for (int i = 0; i < warning_item_boxes.Count; i++)
                {
                    if (item_start_index + i < render_warning_item_list.Count)
                    {
                        var item_box = warning_item_boxes[i] as MarginContainer;
                        var is_restricted = item_box.GetNode<CheckButton>("HBoxContainer/VBoxContainer2/MarginContainer/Toggle_Is_Restricted").Pressed;

                        var input = inputs.GetChildren()[i] as TextEdit;

                        input.Readonly = is_restricted; // making the input readonly if the item is_completely restricted

                        var dic = render_warning_item_list[item_start_index + i] as Dictionary<string, string>;

                        // adding user input in our data list by simpling updating the dictionary in which data exists
                        dic["is_completely_restricted"] = is_restricted.ToString();
                        dic["message"] = input.Text;


                    }

                    // getting whether the remove button is being pressed or not
                    MarginContainer con = warning_item_boxes[i] as MarginContainer;

                    Button remove_button = con.GetNode<Button>("HBoxContainer/VBoxContainer/MarginContainer/Button");
                    if (remove_button.Pressed && can_delete_items)
                    {
                        render_warning_item_list.Remove(render_warning_item_list[item_start_index + i]);
                        is_item_warning_data_loaded = false;
                        can_delete_items = false;
                        break;
                    }
                }
            }

        }
